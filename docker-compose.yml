services:
  backend:
    build: ./backend
    environment:
      - FLASK_ENV=development
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "5000"  # Port par d√©faut de Flask
    networks:
      - internal_network

  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "4200:4200" 
    networks:
      - internal_network

  db:
    image: mysql:5.7
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: todo_app
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    # ports:
    #   - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8085:80"
    environment:
      PMA_HOST: db
      PMA_USER: user
      PMA_PASSWORD: password
    depends_on:
      - db
    networks:
      - internal_network

  nginx:
    image: nginx:alpine
    container_name: nginx_reverse_proxy
    ports:
      - "8086:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - internal_network

  fluentd:
    image: fluent/fluentd:v1.16
    user: root
    command: sh -c "mkdir -p /usr/lib/ruby/gems/3.2.0 && chmod 777 /usr/lib/ruby/gems/3.2.0 && mkdir -p /etc/fluent && ln -sf /fluentd/etc/fluent.conf /etc/fluent/fluent.conf && gem install fluent-plugin-elasticsearch --no-document && fluentd"
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - elasticsearch
    networks:
      - internal_network

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - internal_network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\\|status.*yellow'"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - internal_network

  grafana:
    image: grafana/grafana:8.1.2
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - internal_network
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8087:8080
    networks:
      - internal_network

volumes:
  mysql_data:
  prometheus_data:
  elasticsearch_data:
  grafana_data:

networks:
  internal_network:
    driver: bridge